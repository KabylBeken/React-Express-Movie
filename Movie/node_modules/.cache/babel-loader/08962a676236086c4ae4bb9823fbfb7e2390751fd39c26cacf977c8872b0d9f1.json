{"ast":null,"code":"import axios from 'axios';\nconst authHeader = () => {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  if (user && user.token) {\n    return {\n      Authorization: 'Bearer ' + user.token\n    };\n  } else {\n    return {};\n  }\n};\nexport const doLogin = async (email, password) => {\n  try {\n    const response = await axios.post('http://localhost:3005/login', {\n      email: email,\n      password: password\n    }, {\n      headers: authHeader()\n    });\n    localStorage.setItem(\"user\", JSON.stringify(response.data));\n    return {\n      success: true,\n      data: \"Пайдаланушы кірді\"\n    };\n  } catch (error) {\n    return {\n      success: false,\n      data: error\n    };\n  }\n};\nexport const doRegister = async (email, password, username) => {\n  try {\n    const response = await axios.post('http://localhost:3005/register', {\n      email: email,\n      password: password,\n      username: username\n    }, {\n      headers: authHeader()\n    });\n    return {\n      success: true,\n      data: \"Пайдаланушы тіркелді...\"\n    };\n  } catch (error) {\n    return {\n      success: false,\n      data: error\n    };\n  }\n};\nexport const editMovie = async movie => {\n  try {\n    const formData = new FormData();\n    formData.append('title', movie.title);\n    formData.append('price', movie.price);\n    formData.append('content', movie.content);\n    formData.append('categoryId', movie.categoryId);\n    if (movie.photo) {\n      formData.append('photo', movie.photo);\n    }\n    const response = await axios.put('http://localhost:3005/movies/' + movie.id + '/edit', formData, {\n      headers: {\n        ...authHeader(),\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return {\n      success: true\n    };\n  } catch (error) {\n    return {\n      success: false\n    };\n  }\n};\nexport const deleteMovie = async id => {\n  try {\n    const response = await axios.delete('http://localhost:3005/movies/delete/' + id, {\n      headers: authHeader()\n    });\n    return {\n      success: true\n    };\n  } catch (error) {\n    return {\n      success: false\n    };\n  }\n};\nexport const setMovie = async formData => {\n  try {\n    const response = await axios.post('http://localhost:3005/movies/create', formData, {\n      headers: {\n        ...authHeader(),\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return {\n      success: true,\n      data: response.data.message\n    };\n  } catch (error) {\n    return {\n      success: false,\n      data: error.response.data.message\n    };\n  }\n};\nexport const getAllMovies = async () => {\n  try {\n    const response = await axios.get('http://localhost:3005/movies');\n    return {\n      success: true,\n      data: response.data\n    };\n  } catch (error) {\n    return {\n      success: false,\n      data: error.response.data.error\n    };\n  }\n};\nexport const getOneMovie = async movieId => {\n  try {\n    const response = await axios.get('http://localhost:3005/movies/' + movieId, {\n      headers: authHeader()\n    });\n    return {\n      success: true,\n      data: response.data\n    };\n  } catch (error) {\n    return {\n      success: false,\n      data: error.response.data.error\n    };\n  }\n};\nexport const getAllCategories = async () => {\n  const response = await axios.get('http://localhost:3005/categories');\n  return response.data;\n};\nexport const getCategoryMovies = async catId => {\n  try {\n    const response = await axios.get('http://localhost:3005/movies/category/' + catId, {\n      headers: authHeader()\n    });\n    return {\n      success: true,\n      data: response.data\n    };\n  } catch (error) {\n    return {\n      success: false,\n      data: error.response.data.error\n    };\n  }\n};\nexport const getMyMovies = async () => {\n  try {\n    const response = await axios.get('http://localhost:3005/privateMovies', {\n      headers: authHeader()\n    });\n    return {\n      success: true,\n      data: response.data\n    };\n  } catch (error) {\n    return {\n      success: false,\n      data: \"Error\"\n    };\n  }\n};\nexport const getAllUsers = async () => {\n  try {\n    const response = await axios.get('http://localhost:3005/users');\n    return {\n      success: true,\n      data: response.data\n    };\n  } catch (error) {\n    return {\n      success: false,\n      data: error.response.data.error\n    };\n  }\n};\nexport const getProfile = async () => {\n  try {\n    const response = await axios.get('http://localhost:3005/profile', {\n      headers: authHeader()\n    });\n    return {\n      success: true,\n      data: response.data\n    };\n  } catch (error) {\n    return {\n      success: false,\n      data: error.response ? error.response.data : error.message\n    };\n  }\n};\nexport const setCategory = async name => {\n  try {\n    const response = await axios.post('http://localhost:3005/categories/create', {\n      name\n    }, {\n      headers: authHeader()\n    });\n    return {\n      success: true,\n      data: response.message\n    };\n  } catch (error) {\n    return {\n      success: false,\n      data: error\n    };\n  }\n};\nexport const deleteCategory = async id => {\n  try {\n    const response = await axios.delete('http://localhost:3005/categories/delete/' + id, {\n      headers: authHeader()\n    });\n    return {\n      success: true\n    };\n  } catch (error) {\n    return {\n      success: false\n    };\n  }\n};\nexport const editCategory = async category => {\n  try {\n    const response = await axios.put('http://localhost:3005/categories/' + category.id + '/edit', {\n      name: category.name\n    }, {\n      headers: authHeader()\n    });\n    return {\n      success: true\n    };\n  } catch (error) {\n    return {\n      success: false\n    };\n  }\n};\nexport const getOneCategory = async id => {\n  try {\n    const response = await axios.get(`http://localhost:3005/categories/${id}`, {\n      headers: authHeader()\n    });\n    return {\n      success: true,\n      data: response.data\n    };\n  } catch (error) {\n    return {\n      success: false,\n      data: error.response ? error.response.data : error.message\n    };\n  }\n};\nexport const getAllUsersAdmin = async () => {\n  try {\n    const response = await axios.get('http://localhost:3005/admin/users', {\n      headers: authHeader()\n    });\n    return {\n      success: true,\n      data: response.data\n    };\n  } catch (error) {\n    return {\n      success: false,\n      data: error.response.data.error\n    };\n  }\n};\nexport const editUser = async user => {\n  try {\n    const response = await axios.put('http://localhost:3005/admin/users/' + user.id + '/edit', user, {\n      headers: authHeader()\n    });\n    return {\n      success: true\n    };\n  } catch (error) {\n    return {\n      success: false\n    };\n  }\n};\nexport const deleteUser = async id => {\n  try {\n    const response = await axios.delete('http://localhost:3005/admin/users/' + id + '/delete', {\n      headers: authHeader()\n    });\n    return {\n      success: true\n    };\n  } catch (error) {\n    return {\n      success: false\n    };\n  }\n};\nexport const getOneUser = async userId => {\n  try {\n    const response = await axios.get('http://localhost:3005/admin/users/' + userId, {\n      headers: authHeader()\n    });\n    return {\n      success: true,\n      data: response.data\n    };\n  } catch (error) {\n    return {\n      success: false,\n      error: error.response.data\n    };\n  }\n};\n\n// Add to favorite movies\nexport const addFavoriteMovie = async movieId => {\n  try {\n    const response = await axios.post('http://localhost:3005/favoriteMovies', {\n      movieId\n    }, {\n      headers: authHeader()\n    });\n    return {\n      success: true,\n      data: response.data.message\n    };\n  } catch (error) {\n    return {\n      success: false,\n      data: error.response.data.message\n    };\n  }\n};\n\n// Remove from favorite movies\nexport const removeFavoriteMovie = async movieId => {\n  try {\n    const response = await axios.delete('http://localhost:3005/favoriteMovies/' + movieId, {\n      headers: authHeader()\n    });\n    return {\n      success: true,\n      data: response.data.message\n    };\n  } catch (error) {\n    return {\n      success: false,\n      data: error.response.data.message\n    };\n  }\n};\n\n// Get favorite movies\nexport const getFavoriteMovies = async () => {\n  try {\n    const response = await axios.get('http://localhost:3005/favoriteMovies', {\n      headers: authHeader()\n    });\n    return {\n      success: true,\n      data: response.data\n    };\n  } catch (error) {\n    return {\n      success: false,\n      data: error.response ? error.response.data : error.message\n    };\n  }\n};","map":{"version":3,"names":["axios","authHeader","user","JSON","parse","localStorage","getItem","token","Authorization","doLogin","email","password","response","post","headers","setItem","stringify","data","success","error","doRegister","username","editMovie","movie","formData","FormData","append","title","price","content","categoryId","photo","put","id","deleteMovie","delete","setMovie","message","getAllMovies","get","getOneMovie","movieId","getAllCategories","getCategoryMovies","catId","getMyMovies","getAllUsers","getProfile","setCategory","name","deleteCategory","editCategory","category","getOneCategory","getAllUsersAdmin","editUser","deleteUser","getOneUser","userId","addFavoriteMovie","removeFavoriteMovie","getFavoriteMovies"],"sources":["C:/Users/aser/Downloads/React/Movie/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst authHeader = () => {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n    if (user && user.token) {\r\n        return { Authorization: 'Bearer ' + user.token }\r\n    } else {\r\n        return {};\r\n    }\r\n}\r\n\r\nexport const doLogin = async (email, password) => {\r\n    try {\r\n        const response = await axios.post('http://localhost:3005/login',\r\n            {\r\n                email: email,\r\n                password: password\r\n            },\r\n            { headers: authHeader() }\r\n        );\r\n\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        return { success: true, data: \"Пайдаланушы кірді\" };\r\n\r\n    } catch (error) {\r\n        return { success: false, data: error };\r\n    }\r\n}\r\n\r\nexport const doRegister = async (email, password, username) => {\r\n    try {\r\n        const response = await axios.post('http://localhost:3005/register',\r\n            {\r\n                email: email,\r\n                password: password,\r\n                username: username\r\n            },\r\n            { headers: authHeader() }\r\n        )\r\n\r\n        return { success: true, data: \"Пайдаланушы тіркелді...\" };\r\n\r\n    } catch (error) {\r\n        return { success: false, data: error };\r\n    }\r\n}\r\n\r\nexport const editMovie = async (movie) => {\r\n    try {\r\n        const formData = new FormData();\r\n        formData.append('title', movie.title);\r\n        formData.append('price', movie.price);\r\n        formData.append('content', movie.content);\r\n        formData.append('categoryId', movie.categoryId);\r\n        if (movie.photo) {\r\n            formData.append('photo', movie.photo);\r\n        }\r\n\r\n        const response = await axios.put('http://localhost:3005/movies/' + movie.id + '/edit',\r\n            formData,\r\n            {\r\n                headers: {\r\n                    ...authHeader(),\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n        );\r\n\r\n        return { success: true };\r\n\r\n    } catch (error) {\r\n        return { success: false };\r\n    }\r\n}\r\n\r\nexport const deleteMovie = async (id) => {\r\n    try {\r\n        const response = await axios.delete('http://localhost:3005/movies/delete/' + id,\r\n            {\r\n                headers: authHeader()\r\n            }\r\n        )\r\n\r\n        return { success: true };\r\n\r\n    } catch (error) {\r\n        return { success: false };\r\n    }\r\n}\r\n\r\nexport const setMovie = async (formData) => {\r\n    try {\r\n        const response = await axios.post('http://localhost:3005/movies/create', formData, {\r\n            headers: {\r\n                ...authHeader(),\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n\r\n        return { success: true, data: response.data.message };\r\n    } catch (error) {\r\n        return { success: false, data: error.response.data.message };\r\n    }\r\n}\r\n\r\nexport const getAllMovies = async () => {\r\n    try {\r\n        const response = await axios.get('http://localhost:3005/movies');\r\n        return { success: true, data: response.data };\r\n    } catch (error) {\r\n        return { success: false, data: error.response.data.error };\r\n    }\r\n}\r\n\r\nexport const getOneMovie = async (movieId) => {\r\n    try {\r\n        const response = await axios.get('http://localhost:3005/movies/' + movieId,\r\n            { headers: authHeader() }\r\n        )\r\n        return { success: true, data: response.data };\r\n\r\n    } catch (error) {\r\n        return { success: false, data: error.response.data.error };\r\n    }\r\n}\r\n\r\nexport const getAllCategories = async () => {\r\n    const response = await axios.get('http://localhost:3005/categories');\r\n    return response.data;\r\n}\r\n\r\nexport const getCategoryMovies = async (catId) => {\r\n    try {\r\n        const response = await axios.get('http://localhost:3005/movies/category/' + catId,\r\n            { headers: authHeader() }\r\n        )\r\n        return { success: true, data: response.data };\r\n\r\n    } catch (error) {\r\n        return { success: false, data: error.response.data.error };\r\n    }\r\n}\r\n\r\nexport const getMyMovies = async () => {\r\n    try {\r\n        const response = await axios.get('http://localhost:3005/privateMovies',\r\n            { headers: authHeader() }\r\n        )\r\n        return { success: true, data: response.data };\r\n\r\n    } catch (error) {\r\n        return { success: false, data: \"Error\" };\r\n    }\r\n}\r\n\r\nexport const getAllUsers = async () => {\r\n    try {\r\n        const response = await axios.get('http://localhost:3005/users')\r\n        return { success: true, data: response.data };\r\n\r\n    } catch (error) {\r\n        return { success: false, data: error.response.data.error };\r\n    }\r\n}\r\n\r\nexport const getProfile = async () => {\r\n    try {\r\n        const response = await axios.get('http://localhost:3005/profile', { headers: authHeader() });\r\n        return { success: true, data: response.data };\r\n    } catch (error) {\r\n        return { success: false, data: error.response ? error.response.data : error.message };\r\n    }\r\n}\r\n\r\nexport const setCategory = async (name) => {\r\n    try {\r\n        const response = await axios.post('http://localhost:3005/categories/create', { name }, { headers: authHeader() });\r\n        return { success: true, data: response.message };\r\n    } catch (error) {\r\n        return { success: false, data: error };\r\n    }\r\n}\r\n\r\nexport const deleteCategory = async (id) => {\r\n    try {\r\n        const response = await axios.delete('http://localhost:3005/categories/delete/' + id, { headers: authHeader() });\r\n        return { success: true };\r\n    } catch (error) {\r\n        return { success: false };\r\n    }\r\n}\r\n\r\nexport const editCategory = async (category) => {\r\n    try {\r\n        const response = await axios.put('http://localhost:3005/categories/' + category.id + '/edit', { name: category.name }, { headers: authHeader() });\r\n        return { success: true };\r\n    } catch (error) {\r\n        return { success: false };\r\n    }\r\n}\r\n\r\nexport const getOneCategory = async (id) => {\r\n    try {\r\n        const response = await axios.get(`http://localhost:3005/categories/${id}`, { headers: authHeader() });\r\n        return { success: true, data: response.data };\r\n    } catch (error) {\r\n        return { success: false, data: error.response ? error.response.data : error.message };\r\n    }\r\n}\r\n\r\nexport const getAllUsersAdmin = async () => {\r\n    try {\r\n        const response = await axios.get('http://localhost:3005/admin/users', { headers: authHeader() });\r\n        return { success: true, data: response.data };\r\n    } catch (error) {\r\n        return { success: false, data: error.response.data.error };\r\n    }\r\n}\r\n\r\nexport const editUser = async (user) => {\r\n    try {\r\n        const response = await axios.put('http://localhost:3005/admin/users/' + user.id + '/edit', user, { headers: authHeader() });\r\n        return { success: true };\r\n    } catch (error) {\r\n        return { success: false };\r\n    }\r\n}\r\n\r\nexport const deleteUser = async (id) => {\r\n    try {\r\n        const response = await axios.delete('http://localhost:3005/admin/users/' + id + '/delete', { headers: authHeader() });\r\n        return { success: true };\r\n    } catch (error) {\r\n        return { success: false };\r\n    }\r\n}\r\n\r\nexport const getOneUser = async (userId) => {\r\n    try {\r\n        const response = await axios.get('http://localhost:3005/admin/users/' + userId, \r\n        { \r\n            headers: authHeader() \r\n        });\r\n        return { success: true, data: response.data };\r\n    } catch (error) {\r\n        return { success: false, error: error.response.data };\r\n    }\r\n}\r\n\r\n// Add to favorite movies\r\nexport const addFavoriteMovie = async (movieId) => {\r\n    try {\r\n        const response = await axios.post('http://localhost:3005/favoriteMovies',\r\n            { movieId },\r\n            { headers: authHeader() }\r\n        );\r\n\r\n        return { success: true, data: response.data.message };\r\n\r\n    } catch (error) {\r\n        return { success: false, data: error.response.data.message };\r\n    }\r\n}\r\n\r\n// Remove from favorite movies\r\nexport const removeFavoriteMovie = async (movieId) => {\r\n    try {\r\n        const response = await axios.delete('http://localhost:3005/favoriteMovies/' + movieId,\r\n            { headers: authHeader() }\r\n        );\r\n\r\n        return { success: true, data: response.data.message };\r\n\r\n    } catch (error) {\r\n        return { success: false, data: error.response.data.message };\r\n    }\r\n}\r\n\r\n// Get favorite movies\r\nexport const getFavoriteMovies = async () => {\r\n    try {\r\n        const response = await axios.get('http://localhost:3005/favoriteMovies', { headers: authHeader() });\r\n        return { success: true, data: response.data };\r\n    } catch (error) {\r\n        return { success: false, data: error.response ? error.response.data : error.message };\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}